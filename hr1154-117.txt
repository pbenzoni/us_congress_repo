{
   "status":"OK",
   "copyright":"Copyright (c) 2023 Pro Publica Inc. All Rights Reserved.",
   "results":[
      {
         "bill_id": "hr1154-117",
         "bill_slug": "hr1154",
         "congress": "117",
         "bill": "H.R.1154",
         "bill_type": "hr",
         "number": "H.R.1154",
         "bill_uri": "https://api.propublica.org/congress/v1/117/bills/hr1154.json",
         "title": "To authorize the Secretary of the Interior to conduct a study to assess the suitability and feasibility of designating certain land as the Great Dismal Swamp National Heritage Area, and for other purposes.",
         "short_title": "Great Dismal Swamp National Heritage Area Act",
         "sponsor_title": "",
         "sponsor": "A. Donald McEachin",
         "sponsor_id": "M001200",
         "sponsor_uri": "https://api.propublica.org/congress/v1/members/M001200.json",
         "sponsor_party": "D",
         "sponsor_state": "VA",
         "gpo_pdf_uri": null,
         "congressdotgov_url": "https://www.congress.gov/bill/117th-congress/house-bill/1154",
         "govtrack_url": "https://www.govtrack.us/congress/bills/117/hr1154",
         "introduced_date": "2021-02-18",
         "active": true,
         "last_vote": "2021-09-28",
         "house_passage": "2021-09-28",
         "senate_passage": "2022-12-21",
         "enacted": null,
         "vetoed": null,
         "cosponsors": 3,
         "cosponsors_by_party": {"D":3},
         "withdrawn_cosponsors": 0,
         "primary_subject": "",
         "committees": "",
         "committee_codes": ["SSEV","HSII"],
         "subcommittee_codes": ["HSII10"],
         "latest_major_action_date": "2023-01-05",
         "latest_major_action": "Signed by President.",
         "house_passage_vote": "2021-09-28",
         "senate_passage_vote": "2022-12-21",
         "summary": "Great Dismal Swamp National Heritage Area Act This bill directs the Department of the Interior to assess the suitability and feasibility of designating a study area comprised of cities and counties in Virginia and counties in North Carolina as a National Heritage Area to be known as the Great Dismal Swamp National Heritage Area. The study shall include analysis, documentation, and determinations on whether the study area (1) has an assemblage of natural, historic, and cultural resources that represent distinctive aspects of the people and culture of the United States; and (2) are worthy of recognition, conservation, interpretation, and continuing use.",
         "summary_short": "Great Dismal Swamp National Heritage Area Act This bill directs the Department of the Interior to assess the suitability and feasibility of designating a study area comprised of cities and counties in Virginia and counties in North Carolina as a National Heritage Area to be known as the Great Dismal Swamp National Heritage Area. The study shall include analysis, documentation, and determinations on whether the study area (1) has an assemblage of natural, historic, and cultural resources that ...",
         "cbo_estimate_url": null,
         "versions":[
         {
           "status":"Referred in Senate",
           "title":"RFS",
           "url":"https://www.govinfo.gov/content/pkg/BILLS-117hr1154rfs/xml/BILLS-117hr1154rfs.xml",
           "congressdotgov_url":"https://www.congress.gov/bill/117th-congress/house-bill/1154/text/rfs"
         },
                  {
           "status":"Engrossed in House",
           "title":"EH",
           "url":"https://www.govinfo.gov/content/pkg/BILLS-117hr1154eh/xml/BILLS-117hr1154eh.xml",
           "congressdotgov_url":"https://www.congress.gov/bill/117th-congress/house-bill/1154/text/eh"
         },
                  {
           "status":"Reported in House",
           "title":"RH",
           "url":"https://www.govinfo.gov/content/pkg/BILLS-117hr1154rh/xml/BILLS-117hr1154rh.xml",
           "congressdotgov_url":"https://www.congress.gov/bill/117th-congress/house-bill/1154/text/rh"
         },
                  {
           "status":"Introduced in House",
           "title":"IH",
           "url":"https://www.govinfo.gov/content/pkg/BILLS-117hr1154ih/xml/BILLS-117hr1154ih.xml",
           "congressdotgov_url":"https://www.congress.gov/bill/117th-congress/house-bill/1154/text/ih"
         }
         ],
         "actions":[
         {
           "id": 21,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2022-12-28",
           "description": "Presented to President."
         },
                  {
           "id": 20,
           "chamber": "Senate",
           "action_type": "Floor",
           "datetime": "2022-12-22",
           "description": "Message on Senate action sent to the House."
         },
                  {
           "id": 19,
           "chamber": "Senate",
           "action_type": "Floor",
           "datetime": "2022-12-21",
           "description": "Passed Senate without amendment by Unanimous Consent. (consideration: CR S9730)"
         },
                  {
           "id": 18,
           "chamber": "Senate",
           "action_type": "Discharge",
           "datetime": "2022-12-21",
           "description": "Senate Committee on Environment and Public Works discharged by Unanimous Consent."
         },
                  {
           "id": 17,
           "chamber": "Senate",
           "action_type": "IntroReferral",
           "datetime": "2021-09-29",
           "description": "Received in the Senate and Read twice and referred to the Committee on Environment and Public Works."
         },
                  {
           "id": 16,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2021-09-28",
           "description": "Motion to reconsider laid on the table Agreed to without objection."
         },
                  {
           "id": 15,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2021-09-28",
           "description": "On motion to suspend the rules and pass the bill Agreed to by the Yeas and Nays: (2/3 required): 391 - 36 (Roll no. 303). (text: CR 7/26/2021 H3860)"
         },
                  {
           "id": 14,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2021-09-28",
           "description": "Considered as unfinished business. (consideration: CR H5496-5497)"
         },
                  {
           "id": 13,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2021-07-26",
           "description": "Considered under suspension of the rules. (consideration: CR H3860-3861; text: CR H3860)"
         },
                  {
           "id": 12,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2021-07-26",
           "description": "Considered under suspension of the rules. (consideration: CR H3860-3861)"
         },
                  {
           "id": 11,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2021-07-26",
           "description": "At the conclusion of debate, the Yeas and Nays were demanded and ordered. Pursuant to the provisions of clause 8, rule XX, the Chair announced that further proceedings on the motion would be postponed."
         },
                  {
           "id": 10,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2021-07-26",
           "description": "DEBATE - The House proceeded with forty minutes of debate on H.R. 1154."
         },
                  {
           "id": 9,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2021-07-26",
           "description": "Mrs. Dingell moved to suspend the rules and pass the bill."
         },
                  {
           "id": 8,
           "chamber": "House",
           "action_type": "Calendars",
           "datetime": "2021-07-26",
           "description": "Placed on the Union Calendar, Calendar No. 77."
         },
                  {
           "id": 7,
           "chamber": "House",
           "action_type": "Committee",
           "datetime": "2021-07-26",
           "description": "Reported by the Committee on Natural Resources. H. Rept. 117-104."
         },
                  {
           "id": 6,
           "chamber": "House",
           "action_type": "Committee",
           "datetime": "2021-07-14",
           "description": "Ordered to be Reported by Unanimous Consent."
         },
                  {
           "id": 5,
           "chamber": "House",
           "action_type": "Committee",
           "datetime": "2021-07-14",
           "description": "Committee Consideration and Mark-up Session Held."
         },
                  {
           "id": 4,
           "chamber": "House",
           "action_type": "Committee",
           "datetime": "2021-07-14",
           "description": "Subcommittee on National Parks, Forests, and Public Lands Discharged."
         },
                  {
           "id": 3,
           "chamber": "House",
           "action_type": "Committee",
           "datetime": "2021-06-15",
           "description": "Subcommittee Hearings Held."
         },
                  {
           "id": 2,
           "chamber": "House",
           "action_type": "Committee",
           "datetime": "2021-03-23",
           "description": "Referred to the Subcommittee on National Parks, Forests, and Public Lands."
         },
                  {
           "id": 1,
           "chamber": "House",
           "action_type": "IntroReferral",
           "datetime": "2021-02-18",
           "description": "Referred to the House Committee on Natural Resources."
         }
         ],
         "presidential_statements":[
],
         "votes": [
           {
             "chamber": "House",
             "date": "2021-09-28",
             "time": "16:25:00",
             "roll_call": "303",
             "question": "On Motion to Suspend the Rules and Pass",
             "result": "Passed",
             "total_yes": 391,
             "total_no": 36,
             "total_not_voting": 5,
             "api_url": "https://api.propublica.org/congress/v1/117/house/sessions/1/votes/303.json"
           }
         ]

      }
   ]
}
