{
   "status":"OK",
   "copyright":"Copyright (c) 2023 Pro Publica Inc. All Rights Reserved.",
   "results":[
      {
         "bill_id": "hr1917-117",
         "bill_slug": "hr1917",
         "congress": "117",
         "bill": "H.R.1917",
         "bill_type": "hr",
         "number": "H.R.1917",
         "bill_uri": "https://api.propublica.org/congress/v1/117/bills/hr1917.json",
         "title": "To modify eligibility requirements for certain hazard mitigation assistance programs, and for other purposes.",
         "short_title": "Hazard Eligibility and Local Projects Act",
         "sponsor_title": "",
         "sponsor": "Lizzie Fletcher",
         "sponsor_id": "F000468",
         "sponsor_uri": "https://api.propublica.org/congress/v1/members/F000468.json",
         "sponsor_party": "D",
         "sponsor_state": "TX",
         "gpo_pdf_uri": null,
         "congressdotgov_url": "https://www.congress.gov/bill/117th-congress/house-bill/1917",
         "govtrack_url": "https://www.govtrack.us/congress/bills/117/hr1917",
         "introduced_date": "2021-03-16",
         "active": true,
         "last_vote": "2022-12-21",
         "house_passage": "2021-11-04",
         "senate_passage": "2022-12-14",
         "enacted": null,
         "vetoed": null,
         "cosponsors": 6,
         "cosponsors_by_party": {"R":4,"D":2},
         "withdrawn_cosponsors": 0,
         "primary_subject": "",
         "committees": "",
         "committee_codes": ["SSGA","HSBA","HSPW"],
         "subcommittee_codes": ["HSPW13"],
         "latest_major_action_date": "2023-01-05",
         "latest_major_action": "Signed by President.",
         "house_passage_vote": "2021-11-04",
         "senate_passage_vote": "2022-12-14",
         "summary": "Hazard Eligibility and Local Projects Act This bill makes an entity seeking assistance under a hazard mitigation assistance program eligible to receive such assistance for certain projects already in progress.",
         "summary_short": "Hazard Eligibility and Local Projects Act This bill makes an entity seeking assistance under a hazard mitigation assistance program eligible to receive such assistance for certain projects already in progress.",
         "cbo_estimate_url": null,
         "versions":[
         {
           "status":"Engrossed Amendment Senate",
           "title":"EAS",
           "url":"https://www.govinfo.gov/content/pkg/BILLS-117hr1917eas/xml/BILLS-117hr1917eas.xml",
           "congressdotgov_url":"https://www.congress.gov/bill/117th-congress/house-bill/1917/text/eas"
         },
                  {
           "status":"Referred in Senate",
           "title":"RFS",
           "url":"https://www.govinfo.gov/content/pkg/BILLS-117hr1917rfs/xml/BILLS-117hr1917rfs.xml",
           "congressdotgov_url":"https://www.congress.gov/bill/117th-congress/house-bill/1917/text/rfs"
         },
                  {
           "status":"Engrossed in House",
           "title":"EH",
           "url":"https://www.govinfo.gov/content/pkg/BILLS-117hr1917eh/xml/BILLS-117hr1917eh.xml",
           "congressdotgov_url":"https://www.congress.gov/bill/117th-congress/house-bill/1917/text/eh"
         },
                  {
           "status":"Reported in House",
           "title":"RH",
           "url":"https://www.govinfo.gov/content/pkg/BILLS-117hr1917rh/xml/BILLS-117hr1917rh.xml",
           "congressdotgov_url":"https://www.congress.gov/bill/117th-congress/house-bill/1917/text/rh"
         },
                  {
           "status":"Introduced in House",
           "title":"IH",
           "url":"https://www.govinfo.gov/content/pkg/BILLS-117hr1917ih/xml/BILLS-117hr1917ih.xml",
           "congressdotgov_url":"https://www.congress.gov/bill/117th-congress/house-bill/1917/text/ih"
         }
         ],
         "actions":[
         {
           "id": 35,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2022-12-28",
           "description": "Presented to President."
         },
                  {
           "id": 34,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2022-12-21",
           "description": "Motion to reconsider laid on the table Agreed to without objection."
         },
                  {
           "id": 33,
           "chamber": "House",
           "action_type": "ResolvingDifferences",
           "datetime": "2022-12-21",
           "description": "On motion that the House suspend the rules and Agreed to by the Yeas and Nays (2/3 required): (Roll No. Agreed to by the Yeas and Nays: (2/3 required): 393 - 19 (Roll no. 536). (text: CR H9936)"
         },
                  {
           "id": 32,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2022-12-21",
           "description": "Considered as unfinished business. (consideration: CR H9978-9979)"
         },
                  {
           "id": 31,
           "chamber": "House",
           "action_type": "ResolvingDifferences",
           "datetime": "2022-12-21",
           "description": "At the conclusion of debate, the Yeas and Nays were demanded and ordered. Pursuant to the provisions of clause 8, rule XX, the chair announced that further proceedings on the motion would be postponed."
         },
                  {
           "id": 30,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2022-12-21",
           "description": "DEBATE - The House proceeded with forty minutes of debate on the motion to suspend the rules and agree to the Senate amendment to H.R. 1917."
         },
                  {
           "id": 29,
           "chamber": "House",
           "action_type": "ResolvingDifferences",
           "datetime": "2022-12-21",
           "description": "Mr. Malinowski moved that the House suspend the rules and agree to the Senate amendment. (consideration: CR H9936-9937)"
         },
                  {
           "id": 28,
           "chamber": "Senate",
           "action_type": "Floor",
           "datetime": "2022-12-15",
           "description": "Message on Senate action sent to the House."
         },
                  {
           "id": 27,
           "chamber": "Senate",
           "action_type": "Floor",
           "datetime": "2022-12-14",
           "description": "Passed Senate with an amendment by Unanimous Consent."
         },
                  {
           "id": 26,
           "chamber": "Senate",
           "action_type": "Floor",
           "datetime": "2022-12-14",
           "description": "Measure laid before Senate by unanimous consent."
         },
                  {
           "id": 25,
           "chamber": "Senate",
           "action_type": "Floor",
           "datetime": "2022-12-14",
           "description": "Passed Senate with an amendment by Unanimous Consent. (text of amendment in the nature of a substitute: CR S7790)"
         },
                  {
           "id": 24,
           "chamber": "Senate",
           "action_type": "Floor",
           "datetime": "2022-12-14",
           "description": "Measure laid before Senate by unanimous consent. (consideration: CR S7790)"
         },
                  {
           "id": 23,
           "chamber": "Senate",
           "action_type": "Floor",
           "datetime": "2022-12-14",
           "description": "Passed Senate with an amendment by Unanimous Consent. (text of amendment in the nature of a substitute: CR S7190)"
         },
                  {
           "id": 22,
           "chamber": "Senate",
           "action_type": "Floor",
           "datetime": "2022-12-14",
           "description": "Measure laid before Senate by unanimous consent. (consideration: CR S7190)"
         },
                  {
           "id": 21,
           "chamber": "Senate",
           "action_type": "Discharge",
           "datetime": "2022-12-14",
           "description": "Senate Committee on Homeland Security and Governmental Affairs discharged by Unanimous Consent."
         },
                  {
           "id": 20,
           "chamber": "Senate",
           "action_type": "IntroReferral",
           "datetime": "2021-11-15",
           "description": "Received in the Senate and Read twice and referred to the Committee on Homeland Security and Governmental Affairs."
         },
                  {
           "id": 19,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2021-11-04",
           "description": "On motion to suspend the rules and pass the bill Agreed to by the Yeas and Nays: (2/3 required): 409 - 16 (Roll no. 359)."
         },
                  {
           "id": 18,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2021-11-04",
           "description": "Considered as unfinished business."
         },
                  {
           "id": 17,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2021-11-04",
           "description": "On motion to suspend the rules and pass the bill Agreed to by the Yeas and Nays: (2/3 required): 409 - 16 (Roll no. 359). (text: 11/3/2021 CR H6136-6137)"
         },
                  {
           "id": 16,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2021-11-04",
           "description": "Considered as unfinished business. (consideration: CR H6195-6196)"
         },
                  {
           "id": 15,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2021-11-04",
           "description": "Motion to reconsider laid on the table Agreed to without objection."
         },
                  {
           "id": 14,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2021-11-03",
           "description": "Considered under suspension of the rules."
         },
                  {
           "id": 13,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2021-11-03",
           "description": "Considered under suspension of the rules. (consideration: CR H6136-6138; text: CR H6136-6137)"
         },
                  {
           "id": 12,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2021-11-03",
           "description": "At the conclusion of debate, the Yeas and Nays were demanded and ordered. Pursuant to the provisions of clause 8, rule XX, the Chair announced that further proceedings on the motion would be postponed."
         },
                  {
           "id": 11,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2021-11-03",
           "description": "DEBATE - The House proceeded with forty minutes of debate on H.R. 1917."
         },
                  {
           "id": 10,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2021-11-03",
           "description": "Mr. Pappas moved to suspend the rules and pass the bill."
         },
                  {
           "id": 9,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2021-11-03",
           "description": "Considered under suspension of the rules. (consideration: CR H6136-6138)"
         },
                  {
           "id": 8,
           "chamber": "House",
           "action_type": "Calendars",
           "datetime": "2021-11-02",
           "description": "Placed on the Union Calendar, Calendar No. 124."
         },
                  {
           "id": 7,
           "chamber": "House",
           "action_type": "Discharge",
           "datetime": "2021-11-02",
           "description": "Committee on Financial Services discharged."
         },
                  {
           "id": 6,
           "chamber": "House",
           "action_type": "Committee",
           "datetime": "2021-11-02",
           "description": "Reported by the Committee on Transportation and Infrastructure. H. Rept. 117-170, Part I."
         },
                  {
           "id": 5,
           "chamber": "House",
           "action_type": "Committee",
           "datetime": "2021-03-24",
           "description": "Ordered to be Reported by Voice Vote."
         },
                  {
           "id": 4,
           "chamber": "House",
           "action_type": "Committee",
           "datetime": "2021-03-24",
           "description": "Committee Consideration and Mark-up Session Held."
         },
                  {
           "id": 3,
           "chamber": "House",
           "action_type": "Committee",
           "datetime": "2021-03-24",
           "description": "Subcommittee on Economic Development, Public Buildings, and Emergency Management Discharged."
         },
                  {
           "id": 2,
           "chamber": "House",
           "action_type": "Committee",
           "datetime": "2021-03-17",
           "description": "Referred to the Subcommittee on Economic Development, Public Buildings, and Emergency Management."
         },
                  {
           "id": 1,
           "chamber": "House",
           "action_type": "IntroReferral",
           "datetime": "2021-03-16",
           "description": "Referred to the Committee on Transportation and Infrastructure, and in addition to the Committee on Financial Services, for a period to be subsequently determined by the Speaker, in each case for consideration of such provisions as fall within the jurisdiction of the committee concerned."
         }
         ],
         "presidential_statements":[
],
         "votes": [
           {
             "chamber": "House",
             "date": "2022-12-21",
             "time": "22:46:00",
             "roll_call": "536",
             "question": "On Motion to Suspend the Rules and Concur in the Senate Amendment",
             "result": "Passed",
             "total_yes": 393,
             "total_no": 19,
             "total_not_voting": 19,
             "api_url": "https://api.propublica.org/congress/v1/117/house/sessions/2/votes/536.json"
           },
           {
             "chamber": "House",
             "date": "2021-11-04",
             "time": "15:06:00",
             "roll_call": "359",
             "question": "On Motion to Suspend the Rules and Pass",
             "result": "Passed",
             "total_yes": 409,
             "total_no": 16,
             "total_not_voting": 7,
             "api_url": "https://api.propublica.org/congress/v1/117/house/sessions/1/votes/359.json"
           }
         ]

      }
   ]
}
