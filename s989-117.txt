{
   "status":"OK",
   "copyright":"Copyright (c) 2023 Pro Publica Inc. All Rights Reserved.",
   "results":[
      {
         "bill_id": "s989-117",
         "bill_slug": "s989",
         "congress": "117",
         "bill": "S.989",
         "bill_type": "s",
         "number": "S.989",
         "bill_uri": "https://api.propublica.org/congress/v1/117/bills/s989.json",
         "title": "A bill to establish a Native American language resource center in furtherance of the policy set forth in the Native American Languages Act.",
         "short_title": "Native American Language Resource Center Act of 2022",
         "sponsor_title": "",
         "sponsor": "Brian Schatz",
         "sponsor_id": "S001194",
         "sponsor_uri": "https://api.propublica.org/congress/v1/members/S001194.json",
         "sponsor_party": "D",
         "sponsor_state": "HI",
         "gpo_pdf_uri": null,
         "congressdotgov_url": "https://www.congress.gov/bill/117th-congress/senate-bill/989",
         "govtrack_url": "https://www.govtrack.us/congress/bills/117/s989",
         "introduced_date": "2021-03-25",
         "active": true,
         "last_vote": "2022-12-22",
         "house_passage": "2022-12-22",
         "senate_passage": "2022-12-19",
         "enacted": null,
         "vetoed": null,
         "cosponsors": 2,
         "cosponsors_by_party": {"D":1,"R":1},
         "withdrawn_cosponsors": 0,
         "primary_subject": "",
         "committees": "",
         "committee_codes": ["SLIA"],
         "subcommittee_codes": [],
         "latest_major_action_date": "2023-01-05",
         "latest_major_action": "Signed by President.",
         "house_passage_vote": "2022-12-22",
         "senate_passage_vote": "2022-12-19",
         "summary": "Native American Language Resource Center Act of 2021 This bill authorizes the Department of Education to make a grant to or enter into a contract with an eligible entity (e.g., an institution of higher education) to establish, operate, and staff a Native American language resource center. The center must serve as a resource to improve the capacity to teach and learn Native American languages.",
         "summary_short": "Native American Language Resource Center Act of 2021 This bill authorizes the Department of Education to make a grant to or enter into a contract with an eligible entity (e.g., an institution of higher education) to establish, operate, and staff a Native American language resource center. The center must serve as a resource to improve the capacity to teach and learn Native American languages.",
         "cbo_estimate_url": null,
         "versions":[
         {
           "status":"Engrossed in Senate",
           "title":"ES",
           "url":"https://www.govinfo.gov/content/pkg/BILLS-117s989es/xml/BILLS-117s989es.xml",
           "congressdotgov_url":"https://www.congress.gov/bill/117th-congress/senate-bill/989/text/es"
         },
                  {
           "status":"Reported to Senate",
           "title":"RS",
           "url":"https://www.govinfo.gov/content/pkg/BILLS-117s989rs/xml/BILLS-117s989rs.xml",
           "congressdotgov_url":"https://www.congress.gov/bill/117th-congress/senate-bill/989/text/rs"
         },
                  {
           "status":"Introduced in Senate",
           "title":"IS",
           "url":"https://www.govinfo.gov/content/pkg/BILLS-117s989is/xml/BILLS-117s989is.xml",
           "congressdotgov_url":"https://www.congress.gov/bill/117th-congress/senate-bill/989/text/is"
         }
         ],
         "actions":[
         {
           "id": 22,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2022-12-28",
           "description": "Presented to President."
         },
                  {
           "id": 21,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2022-12-22",
           "description": "Motion to reconsider laid on the table Agreed to without objection."
         },
                  {
           "id": 20,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2022-12-22",
           "description": "On motion to suspend the rules and pass the bill Agreed to by the Yeas and Nays: (2/3 required): 342 - 71 (Roll no. 544). (text: 12/21/2022 CR H9955)"
         },
                  {
           "id": 19,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2022-12-22",
           "description": "Considered as unfinished business. (consideration: CR H10035-10036)"
         },
                  {
           "id": 18,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2022-12-21",
           "description": "At the conclusion of debate, the Yeas and Nays were demanded and ordered. Pursuant to the provisions of clause 8, rule XX, the Chair announced that further proceedings on the motion would be postponed."
         },
                  {
           "id": 17,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2022-12-21",
           "description": "DEBATE - The House proceeded with forty minutes of debate on S. 989."
         },
                  {
           "id": 16,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2022-12-21",
           "description": "Considered under suspension of the rules. (consideration: CR H9955-9956)"
         },
                  {
           "id": 15,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2022-12-21",
           "description": "Mrs. Peltola moved to suspend the rules and pass the bill."
         },
                  {
           "id": 14,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2022-12-21",
           "description": "Held at the desk."
         },
                  {
           "id": 13,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2022-12-21",
           "description": "Received in the House."
         },
                  {
           "id": 12,
           "chamber": "Senate",
           "action_type": "Floor",
           "datetime": "2022-12-20",
           "description": "Message on Senate action sent to the House."
         },
                  {
           "id": 11,
           "chamber": "Senate",
           "action_type": "Floor",
           "datetime": "2022-12-19",
           "description": "Passed Senate with an amendment by Voice Vote."
         },
                  {
           "id": 10,
           "chamber": "Senate",
           "action_type": "Floor",
           "datetime": "2022-12-19",
           "description": "The committee substitute withdrawn by Unanimous Consent."
         },
                  {
           "id": 9,
           "chamber": "Senate",
           "action_type": "Floor",
           "datetime": "2022-12-19",
           "description": "Measure laid before Senate by unanimous consent."
         },
                  {
           "id": 8,
           "chamber": "Senate",
           "action_type": "Floor",
           "datetime": "2022-12-19",
           "description": "Passed Senate with an amendment by Voice Vote. (text of amendment in the nature of a substitute: CR S7290-7291)"
         },
                  {
           "id": 7,
           "chamber": "Senate",
           "action_type": "Floor",
           "datetime": "2022-12-19",
           "description": "The committee substitute withdrawn by Unanimous Consent. (CR S7290)"
         },
                  {
           "id": 6,
           "chamber": "Senate",
           "action_type": "Floor",
           "datetime": "2022-12-19",
           "description": "Measure laid before Senate by unanimous consent. (consideration: CR S7289-7291)"
         },
                  {
           "id": 5,
           "chamber": "Senate",
           "action_type": "Calendars",
           "datetime": "2021-12-02",
           "description": "Placed on Senate Legislative Calendar under General Orders. Calendar No. 176."
         },
                  {
           "id": 4,
           "chamber": "Senate",
           "action_type": "Committee",
           "datetime": "2021-12-02",
           "description": "Committee on Indian Affairs. Reported by Senator Schatz with an amendment in the nature of a substitute. With written report No. 117-46."
         },
                  {
           "id": 3,
           "chamber": "Senate",
           "action_type": "Committee",
           "datetime": "2021-08-04",
           "description": "Committee on Indian Affairs. Ordered to be reported with an amendment in the nature of a substitute favorably."
         },
                  {
           "id": 2,
           "chamber": "Senate",
           "action_type": "Committee",
           "datetime": "2021-05-26",
           "description": "Committee on Indian Affairs. Hearings held."
         },
                  {
           "id": 1,
           "chamber": "Senate",
           "action_type": "IntroReferral",
           "datetime": "2021-03-25",
           "description": "Read twice and referred to the Committee on Indian Affairs."
         }
         ],
         "presidential_statements":[
],
         "votes": [
           {
             "chamber": "House",
             "date": "2022-12-22",
             "time": "14:55:00",
             "roll_call": "544",
             "question": "On Motion to Suspend the Rules and Pass",
             "result": "Passed",
             "total_yes": 342,
             "total_no": 71,
             "total_not_voting": 18,
             "api_url": "https://api.propublica.org/congress/v1/117/house/sessions/2/votes/544.json"
           }
         ]

      }
   ]
}
