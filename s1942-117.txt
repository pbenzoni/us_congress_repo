{
   "status":"OK",
   "copyright":"Copyright (c) 2023 Pro Publica Inc. All Rights Reserved.",
   "results":[
      {
         "bill_id": "s1942-117",
         "bill_slug": "s1942",
         "congress": "117",
         "bill": "S.1942",
         "bill_type": "s",
         "number": "S.1942",
         "bill_uri": "https://api.propublica.org/congress/v1/117/bills/s1942.json",
         "title": "A bill to standardize the designation of National Heritage Areas, and for other purposes.",
         "short_title": "National Heritage Area Act",
         "sponsor_title": "",
         "sponsor": "Debbie Stabenow",
         "sponsor_id": "S000770",
         "sponsor_uri": "https://api.propublica.org/congress/v1/members/S000770.json",
         "sponsor_party": "D",
         "sponsor_state": "MI",
         "gpo_pdf_uri": null,
         "congressdotgov_url": "https://www.congress.gov/bill/117th-congress/senate-bill/1942",
         "govtrack_url": "https://www.govtrack.us/congress/bills/117/s1942",
         "introduced_date": "2021-05-27",
         "active": true,
         "last_vote": "2022-12-22",
         "house_passage": "2022-12-22",
         "senate_passage": "2022-12-20",
         "enacted": null,
         "vetoed": null,
         "cosponsors": 16,
         "cosponsors_by_party": {"R":5,"D":10,"ID":1},
         "withdrawn_cosponsors": 0,
         "primary_subject": "",
         "committees": "",
         "committee_codes": ["SSEG"],
         "subcommittee_codes": ["SSEG04"],
         "latest_major_action_date": "2023-01-05",
         "latest_major_action": "Signed by President.",
         "house_passage_vote": "2022-12-22",
         "senate_passage_vote": "2022-12-20",
         "summary": "National Heritage Area Act This bill requires a standard for the designation of National Heritage Areas. The bill establishes a National Heritage Area System through which the Department of the Interior may furnish technical and financial assistance to local coordinating entities to support the establishment, development, and continuity of the National Heritage Areas. Such system shall be composed of  each existing National Heritage Area, National Heritage Corridor, National Heritage Canalway, Cultural Heritage Corridor, and National Heritage Partnership designated by Congress; and  each National Heritage Area designated by Congress after enactment of this bill, unless the law designating the area exempts that area from the system by specific reference to this bill.  Under the system, Interior shall  review and approve management plans for heritage areas, and  submit to Congress reports on the activities conducted with respect to such areas.   Interior may carry out or review a study that assesses the suitability and feasibility of each proposed heritage area. Interior must review and certify whether a study conducted by others determines an area meets specified requirements, including that it has natural, historic, and cultural resources that represent distinctive aspects of the heritage of the United States.  The bill declares that a heritage area shall be designated only by an act of Congress. Management plans must be developed for heritage areas designated under this bill.",
         "summary_short": "National Heritage Area Act This bill requires a standard for the designation of National Heritage Areas. The bill establishes a National Heritage Area System through which the Department of the Interior may furnish technical and financial assistance to local coordinating entities to support the establishment, development, and continuity of the National Heritage Areas. Such system shall be composed of  each existing National Heritage Area, National Heritage Corridor, National Heritage Canalway...",
         "cbo_estimate_url": null,
         "versions":[
         {
           "status":"Reported to Senate",
           "title":"RS",
           "url":"https://www.govinfo.gov/content/pkg/BILLS-117s1942rs/xml/BILLS-117s1942rs.xml",
           "congressdotgov_url":"https://www.congress.gov/bill/117th-congress/senate-bill/1942/text/rs"
         },
                  {
           "status":"Reported to Senate",
           "title":"RS",
           "url":"",
           "congressdotgov_url":"https://www.congress.gov/bill/117th-congress/senate-bill/1942/text/rs"
         },
                  {
           "status":"Reported to Senate",
           "title":"RS",
           "url":"",
           "congressdotgov_url":"https://www.congress.gov/bill/117th-congress/senate-bill/1942/text/rs"
         },
                  {
           "status":"Introduced in Senate",
           "title":"IS",
           "url":"https://www.govinfo.gov/content/pkg/BILLS-117s1942is/xml/BILLS-117s1942is.xml",
           "congressdotgov_url":"https://www.congress.gov/bill/117th-congress/senate-bill/1942/text/is"
         }
         ],
         "actions":[
         {
           "id": 22,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2022-12-28",
           "description": "Presented to President."
         },
                  {
           "id": 21,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2022-12-22",
           "description": "Motion to reconsider laid on the table Agreed to without objection."
         },
                  {
           "id": 20,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2022-12-22",
           "description": "On passage Passed by the Yeas and Nays: 326 - 95 (Roll no. 540). (text: CR H10002-10006)"
         },
                  {
           "id": 19,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2022-12-22",
           "description": "Considered as unfinished business. (consideration: CR H10030-10031)"
         },
                  {
           "id": 18,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2022-12-22",
           "description": "POSTPONED PROCEEDINGS - At the conclusion of debate on S. 1942, the Chair put the question on passage and by voice vote, announced that the ayes had prevailed. Mr. Westerman demanded the yeas and nays and the Chair postponed further proceedings on passage until a time to be announced."
         },
                  {
           "id": 17,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2022-12-22",
           "description": "The previous question was ordered pursuant to the rule."
         },
                  {
           "id": 16,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2022-12-22",
           "description": "DEBATE - The House proceeded with one hour of debate on S. 1942."
         },
                  {
           "id": 15,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2022-12-22",
           "description": "Rule provides for consideration of H.R. 9640 and S. 1942. Measure will be considered read. Bill is closed to amendments. Rule provides for one hour of debate on each measure. Also provides for a motion to recommit H.R. 9640 and a motion to commit S. 1942. H. Res. 693 and H. Res. 1434 are adopted. Provides for the Majority Leader or a designee that the House suspend the rules as though under clause 1 of rule XV with respect to multile measures."
         },
                  {
           "id": 14,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2022-12-22",
           "description": "Considered under the provisions of rule H. Res. 1529. (consideration: CR H10002-10009)"
         },
                  {
           "id": 13,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2022-12-21",
           "description": "Rule H. Res. 1529 passed House."
         },
                  {
           "id": 12,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2022-12-21",
           "description": "Rules Committee Resolution H. Res. 1529 Reported to House. Rule provides for consideration of H.R. 9640 and S. 1942. Measure will be considered read. Bill is closed to amendments. Rule provides for one hour of debate on each measure. Also provides for a motion to recommit H.R. 9640 and a motion to commit S. 1942. H. Res. 693 and H. Res. 1434 are adopted. Provides for the Majority Leader or a designee that the House suspend the rules as though under clause 1 of rule XV with respect to multile measures."
         },
                  {
           "id": 11,
           "chamber": "Senate",
           "action_type": "Floor",
           "datetime": "2022-12-21",
           "description": "Message on Senate action sent to the House."
         },
                  {
           "id": 10,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2022-12-21",
           "description": "Held at the desk."
         },
                  {
           "id": 9,
           "chamber": "House",
           "action_type": "Floor",
           "datetime": "2022-12-21",
           "description": "Received in the House."
         },
                  {
           "id": 8,
           "chamber": "Senate",
           "action_type": "Floor",
           "datetime": "2022-12-20",
           "description": "Passed Senate with an amendment by Unanimous Consent. (text of amendment in the nature of a substitute: CR S9677-9681)"
         },
                  {
           "id": 7,
           "chamber": "Senate",
           "action_type": "Floor",
           "datetime": "2022-12-20",
           "description": "The committee substitute withdrawn by Unanimous Consent. (CR S9618)"
         },
                  {
           "id": 6,
           "chamber": "Senate",
           "action_type": "Floor",
           "datetime": "2022-12-20",
           "description": "Measure laid before Senate by unanimous consent. (consideration: CR S9614-9618)"
         },
                  {
           "id": 5,
           "chamber": "Senate",
           "action_type": "Calendars",
           "datetime": "2022-09-21",
           "description": "Placed on Senate Legislative Calendar under General Orders. Calendar No. 499."
         },
                  {
           "id": 4,
           "chamber": "Senate",
           "action_type": "Committee",
           "datetime": "2022-09-21",
           "description": "Committee on Energy and Natural Resources. Reported by Senator Manchin with an amendment in the nature of a substitute. With written report No. 117-156."
         },
                  {
           "id": 3,
           "chamber": "Senate",
           "action_type": "Committee",
           "datetime": "2022-05-03",
           "description": "Committee on Energy and Natural Resources. Ordered to be reported with an amendment in the nature of a substitute favorably."
         },
                  {
           "id": 2,
           "chamber": "Senate",
           "action_type": "Committee",
           "datetime": "2021-10-06",
           "description": "Committee on Energy and Natural Resources Subcommittee on National Parks. Hearings held."
         },
                  {
           "id": 1,
           "chamber": "Senate",
           "action_type": "IntroReferral",
           "datetime": "2021-05-27",
           "description": "Read twice and referred to the Committee on Energy and Natural Resources."
         }
         ],
         "presidential_statements":[
],
         "votes": [
           {
             "chamber": "House",
             "date": "2022-12-22",
             "time": "13:32:00",
             "roll_call": "540",
             "question": "On Passage",
             "result": "Passed",
             "total_yes": 326,
             "total_no": 95,
             "total_not_voting": 10,
             "api_url": "https://api.propublica.org/congress/v1/117/house/sessions/2/votes/540.json"
           }
         ]

      }
   ]
}
